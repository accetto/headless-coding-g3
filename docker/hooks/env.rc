### All variables in capitals can be set also from the same name environment variables.

die() {
    local message="${1:-(unknown)}"
    local -i code=${2:-1}
    local place="${3:-$0}"

    echo -e "EXITING at line "${BASH_LINENO[0]}" in '${place}' with code ${code}: ${message}" >&2
    exit ${code}
}

### build context is the path to the Dockerfile
### it is expected that '_mydir' is already set by the calling script
declare _build_context="$(dirname ${_mydir})"

### be careful with moving this block
### supporting development and testing
if [[ -f "${_build_context}/hooks/secrets.rc" ]] ; then

    source "${_build_context}/hooks/secrets.rc"
fi

### Docker Hub: GitHub source branch to use
### local: virtual source branch (technically always the current git branch)
declare _branch="${SOURCE_BRANCH:-$1}"

### which image variation to build (feature blend)
declare _blend="${DOCKER_TAG:-$2}"

### owner of the builder and deployment repositories must be the same
declare _owner="${REPO_OWNER_NAME:?Need repo owner name}"

### utility scripts
declare _script_release_of="release_of"

### using this repository name will prohibit the publishing
declare _prohibited_repo_name="void"

### Originally (generation G3) this was the name of the Docker Hub repository
### where the images have been built (the builder repository).
### It has been initialized by the environment on the Docker Hub.
### Since the generation G3v2, the builder repository is optional, because the images
### are built outside the Docker Hub. However, it can be used as a secondary
### deployment repository, even if it still be referenced as a 'builder repository'.
### The images in this secondary deployment repository will be distinguished by their tags.
### Publishing to the builder repository is controlled by the variable 'FORCE_PUBLISHING_BUILDER_REPO'.
### Note that using the prohibited repository name ('void' by default) will prohibit the publishing.
DOCKER_REPO="${_owner}/${BUILDER_REPO:?Need builder repo name}"

declare _deploy_repo

### arrays of the image tags to be deployed
declare -a _deploy_builder_tags
declare -a _deploy_tags
declare _deploytag

### relative path to the readme file resources (relative to the project root)
declare _readme_context

### examples
# VERSION_STICKER_PREFIX=${VERSION_STICKER_SUFFIX:-"BETA-"}
# VERSION_STICKER_SUFFIX=${VERSION_STICKER_SUFFIX:-"-BETA"}

### be careful with moving this statement
### remove the first two command line arguments (<branch> <blend>)
if [[ $# -ge 2 ]] ; then shift 2 ; fi

### Features can be enabled or disabled by setting the related variables.
### Setting it to "0" disables the feature.
### Setting it to "1" enforces the feature.
### Anything else, including null and empty string, does not change the feature's default value.
### NOTE: They are also other feature environment variables that are set directly in the Dockerfile.
### FEATURES_BUILD_SLIM: if to add '--no-install-recommends' to 'apt-get install'
### FEATURES_NOVNC: if 'noVNC' and 'websockify' should be included
### FEATURES_SCREENSHOOTING: if 'xfce4-screenshooter' and 'ristretto' should be included
### FEATURES_THUMBNAILING: if 'tumbler' should be included
### FEATURES_OVERRIDING_ENVV: if overriding environment variables at container startup time should be enabled
### Remark: There are also 'FEATURES_*' variables that are always set, e.g. 'FEATURES_VERSION_STICKER=1'.

### These features influence the content of almost all stages:
### Warning! Anything except '0' means '1', even unset or empty.
if [[ "${FEATURES_BUILD_SLIM}" == "0" ]] ; then FEATURES_BUILD_SLIM="" ; else FEATURES_BUILD_SLIM=1 ; fi

### These features influence the content of the related stages:
if [[ "${FEATURES_SCREENSHOOTING}" == "1" ]] ; then FEATURES_SCREENSHOOTING=1 ; else FEATURES_SCREENSHOOTING="" ; fi
if [[ "${FEATURES_THUMBNAILING}" == "1" ]] ; then FEATURES_THUMBNAILING=1 ; else FEATURES_THUMBNAILING="" ; fi

### These features influence the building graph:
if [[ "${FEATURES_CHROMIUM}" == "1" ]] ; then FEATURES_CHROMIUM=1 ; else FEATURES_CHROMIUM="" ; fi
if [[ "${FEATURES_FIREFOX}" == "1" ]] ; then FEATURES_FIREFOX=1 ; else FEATURES_FIREFOX="" ; fi
if [[ "${FEATURES_NODEJS}" == "1" ]] ; then FEATURES_NODEJS=1 ; else FEATURES_NODEJS="" ; fi
if [[ "${FEATURES_NODEJS}" == "1" ]] ; then FEATURES_NODEJS=1 ; else FEATURES_NODEJS="" ; fi
if [[ "${FEATURES_NVM}" == "1" ]] ; then FEATURES_NVM=1 ; else FEATURES_NVM="" ; fi
if [[ "${FEATURES_POSTMAN}" == "1" ]] ; then FEATURES_POSTMAN=1 ; else FEATURES_POSTMAN="" ; fi
if [[ "${FEATURES_PYTHON}" == "1" ]] ; then FEATURES_PYTHON=1 ; else FEATURES_PYTHON="" ; fi
if [[ "${FEATURES_VSCODE}" == "1" ]] ; then FEATURES_VSCODE=1 ; else FEATURES_VSCODE="" ; fi

### These features influence container behaviour at startup time
### Warning! Anything except '0' means '1', even unset or empty.
if [[ "${FEATURES_OVERRIDING_ENVV}" == "0" ]] ; then FEATURES_OVERRIDING_ENVV="" ; else FEATURES_OVERRIDING_ENVV=1 ; fi

### These features are always enabled and cannot be disabled via environment variables
FEATURES_VNC=1

### These features are enabled by default but can be disabled via environment variables (see below)
### however, they can be disabled via environment variables (see below)
# if [[ "${FEATURES_NOVNC}" == "1" ]] ; then FEATURES_NOVNC=1 ; else FEATURES_NOVNC="" ; fi
# if [[ "${FEATURES_FIREFOX_PLUS}" == "1" ]] ; then FEATURES_FIREFOX_PLUS=1 ; else FEATURES_FIREFOX_PLUS="" ; fi

### The reason for this 'case' is to support some special branches/builds if required.
case "${_branch}" in

    ### default (master), developer (dev, dev-*) and release (v*) builds
    master | dev | dev-* | v* )

        ### fallback to defaults if not provided
        BASEIMAGE="${BASEIMAGE:-debian}"
        BASETAG="${BASETAG:-12-slim}"

        ### hardcoded settings
        TIGERVNC_VERSION="1.13.1"
        TIGERVNC_DISTRO="x86_64"
        NOVNC_VERSION="1.5.0"
        WEBSOCKIFY_VERSION="0.12.0"
        VSCODE_DISTRO="linux-x64"

        ### ----------------------------
        ### debian-vnc-xfce-nodejs-g3   
        ### debian-vnc-xfce-postman-g3  
        ### debian-vnc-xfce-python-g3   
        ### ----------------------------

        ### choose the Dockerfile
        case "${_blend}" in

            vscode | vscode-* )
                DOCKERFILE_PATH="${_build_context}/Dockerfile.xfce.vscode"
                ;;

            nodejs | nodejs-* | nodejs-current | nodejs-current-* )
                DOCKERFILE_PATH="${_build_context}/Dockerfile.xfce.nodejs"
                ;;

            nvm | nvm-* )
                DOCKERFILE_PATH="${_build_context}/Dockerfile.xfce.nvm"
                ;;

            postman | postman-* )
                DOCKERFILE_PATH="${_build_context}/Dockerfile.xfce.postman"
                ;;

            python | python-* )
                DOCKERFILE_PATH="${_build_context}/Dockerfile.xfce.python"
                ;;
            
            * )
                die "Unsupported blend '${_blend}'"
                ;;
        esac

        ### set the building parameters
        case "${_blend}" in

            ### -------------------------
            ### debian-vnc-xfce-vscode-g3
            ### -------------------------

            vscode | vscode-* )

                _deploy_repo="${_owner}/${DEPLOYMENT_REPO_VSCODE}"
                _readme_context="docker/xfce-vscode"

                FEATURES_VSCODE="1"
                VSCODE_VERSION=$( "${_mydir}/${_script_release_of}" 'vscode' )
                VSCODE_FILE=$( "${_mydir}/${_script_release_of}" 'vscode-file' "${VSCODE_VERSION}" )

                ### this feature is enabled by default
                ### however, it can be disabled via environment variables (export FEATURES_NOVNC=0)
                if [[ "${FEATURES_NOVNC}" == "0" ]] ; then
                    FEATURES_NOVNC=""
                else
                    FEATURES_NOVNC="1"
                fi

                if [[ "${_blend}" =~ chromium ]] ; then

                    FEATURES_CHROMIUM="1"
                else
                    FEATURES_CHROMIUM=""
                fi

                if [[ "${_blend}" =~ firefox ]] ; then

                    FEATURES_FIREFOX="1"

                    ### this feature is enabled by default
                    ### however, it can be disabled via environment variables (export FEATURES_FIREFOX_PLUS=0)
                    if [[ "${FEATURES_FIREFOX_PLUS}" == "0" ]] ; then
                        FEATURES_FIREFOX_PLUS=""
                    else
                        FEATURES_FIREFOX_PLUS="1"
                    fi
                fi

                DOCKER_TAG="${_blend}"
                _deploytag="latest${FEATURES_CHROMIUM:+-chromium}${FEATURES_FIREFOX:+-firefox}"

                ### replace 'latest' by 'vscode'
                _deploy_builder_tags=( "${_deploytag/latest/vscode}" )

                ### remove 'latest-' and '-latest'
                _deploytag=( "${_deploytag/latest-/}" )
                _deploytag=( "${_deploytag/-latest/}" )

                _deploy_tags=( "${_deploytag}" )
                ;;
            
            ### -------------------------
            ### debian-vnc-xfce-nodejs-g3
            ### -------------------------
            
            nodejs | nodejs-* | nodejs-current | nodejs-current-* )

                _deploy_repo="${_owner}/${DEPLOYMENT_REPO_NODEJS}"
                _readme_context="docker/xfce-nodejs"

                FEATURES_NODEJS="1"
                NODEJS_DISTRO="linux-x64"

                if [[ "${_blend}" =~ current ]] ; then

                    NODEJS_VERSION=$( "${_mydir}/${_script_release_of}" 'nodejs-current' )
                else
                    NODEJS_VERSION=$( "${_mydir}/${_script_release_of}" 'nodejs-lts' )
                fi

                if [[ $? -ne 0 ]] ; then
                    echo "${NODEJS_VERSION}"
                    exit 1
                fi

                ### this feature is enabled by default
                ### however, it can be disabled via environment variables (export FEATURES_NOVNC=0)
                if [[ "${FEATURES_NOVNC}" == "0" ]] ; then
                    FEATURES_NOVNC=""
                else
                    FEATURES_NOVNC="1"
                fi

                ### images with chromium
                if [[ "${_blend}" =~ chromium ]] ; then

                    FEATURES_CHROMIUM="1"
                else
                    FEATURES_CHROMIUM=""
                fi

                ### images with firefox
                if [[ "${_blend}" =~ firefox ]] ; then

                    FEATURES_FIREFOX="1"

                    ### this feature is enabled by default
                    ### however, it can be disabled via environment variables (export FEATURES_FIREFOX_PLUS=0)
                    if [[ "${FEATURES_FIREFOX_PLUS}" == "0" ]] ; then
                        FEATURES_FIREFOX_PLUS=""
                    else
                        FEATURES_FIREFOX_PLUS="1"
                    fi
                fi

                if [[ "${_blend}" =~ vscode ]] ; then

                    FEATURES_VSCODE="1"
                    VSCODE_VERSION=$( "${_mydir}/${_script_release_of}" 'vscode' )
                    VSCODE_FILE=$( "${_mydir}/${_script_release_of}" 'vscode-file' "${VSCODE_VERSION}" )
                else
                     FEATURES_VSCODE=""
                fi

                DOCKER_TAG="${_blend}"
                _deploytag="latest${FEATURES_VSCODE:+-vscode}${FEATURES_CHROMIUM:+-chromium}${FEATURES_FIREFOX:+-firefox}"

                if [[ "${_blend}" =~ -current ]] ; then

                    _deploytag="${_deploytag}-current"
                fi

                ### replace 'latest' by 'nodejs'
                _deploy_builder_tags=( "${_deploytag/latest/nodejs}" )

                ### remove 'latest-' and '-latest'
                _deploytag=( "${_deploytag/latest-/}" )
                _deploytag=( "${_deploytag/-latest/}" )

                _deploy_tags=( "${_deploytag}" )
                ;;

            ### ######################
            ### debian-vnc-xfce-nvm-g3
            ### ######################

            nvm | nvm-* )
                _deploy_repo="${_owner}/${DEPLOYMENT_REPO_NVM}"
                _readme_context="docker/xfce-nvm"

                FEATURES_NVM="1"

                NVM_VERSION=$( "${_mydir}/${_script_release_of}" 'nvm' )

                ### this feature is enabled by default
                ### however, it can be disabled via environment variables (export FEATURES_NOVNC=0)
                if [[ "${FEATURES_NOVNC}" == "0" ]] ; then
                    FEATURES_NOVNC=""
                else
                    FEATURES_NOVNC="1"
                fi

                ### images with chromium
                if [[ "${_blend}" =~ chromium ]] ; then

                    FEATURES_CHROMIUM="1"
                else
                    FEATURES_CHROMIUM=""
                fi

                ### images with firefox
                if [[ "${_blend}" =~ firefox ]] ; then

                    FEATURES_FIREFOX="1"

                    ### this feature is enabled by default
                    ### however, it can be disabled via environment variables (export FEATURES_FIREFOX_PLUS=0)
                    if [[ "${FEATURES_FIREFOX_PLUS}" == "0" ]] ; then
                        FEATURES_FIREFOX_PLUS=""
                    else
                        FEATURES_FIREFOX_PLUS="1"
                    fi
                fi

                if [[ "${_blend}" =~ vscode ]] ; then

                    FEATURES_VSCODE="1"
                    VSCODE_VERSION=$( "${_mydir}/${_script_release_of}" 'vscode' )
                    VSCODE_FILE=$( "${_mydir}/${_script_release_of}" 'vscode-file' "${VSCODE_VERSION}" )
                else
                     FEATURES_VSCODE=""
                fi

                DOCKER_TAG="${_blend}"
                _deploytag="latest${FEATURES_VSCODE:+-vscode}${FEATURES_CHROMIUM:+-chromium}${FEATURES_FIREFOX:+-firefox}"

                ### replace 'latest' by 'nvm'
                _deploy_builder_tags=( "${_deploytag/latest/nvm}" )

                ### remove 'latest-' and '-latest'
                _deploytag=( "${_deploytag/latest-/}" )
                _deploytag=( "${_deploytag/-latest/}" )

                _deploy_tags=( "${_deploytag}" )
                ;;
            
            ### --------------------------
            ### debian-vnc-xfce-postman-g3
            ### --------------------------

            postman | postman-* )

                _deploy_repo="${_owner}/${DEPLOYMENT_REPO_POSTMAN}"
                _readme_context="docker/xfce-postman"

                FEATURES_POSTMAN="1"
                POSTMAN_DISTRO="linux-x64"

                POSTMAN_VERSION=$( "${_mydir}/${_script_release_of}" 'postman' )
                
                if [[ $? -ne 0 ]] ; then
                    echo "${POSTMAN_VERSION}"
                    exit 1
                fi

                ### this feature is enabled by default
                ### however, it can be disabled via environment variables (export FEATURES_NOVNC=0)
                if [[ "${FEATURES_NOVNC}" == "0" ]] ; then
                    FEATURES_NOVNC=""
                else
                    FEATURES_NOVNC="1"
                fi

                if [[ "${_blend}" =~ chromium ]] ; then

                    FEATURES_CHROMIUM="1"
                else
                    FEATURES_CHROMIUM=""
                fi

                if [[ "${_blend}" =~ firefox ]] ; then

                    FEATURES_FIREFOX="1"

                    ### this feature is enabled by default
                    ### however, it can be disabled via environment variables (export FEATURES_FIREFOX_PLUS=0)
                    if [[ "${FEATURES_FIREFOX_PLUS}" == "0" ]] ; then
                        FEATURES_FIREFOX_PLUS=""
                    else
                        FEATURES_FIREFOX_PLUS="1"
                    fi
                fi

                DOCKER_TAG="${_blend}"
                _deploytag="latest${FEATURES_VSCODE:+-vscode}${FEATURES_CHROMIUM:+-chromium}${FEATURES_FIREFOX:+-firefox}"

                ### replace 'latest' by 'postman'
                _deploy_builder_tags=( "${_deploytag/latest/postman}" )

                ### remove 'latest-' and '-latest'
                _deploytag=( "${_deploytag/latest-/}" )
                _deploytag=( "${_deploytag/-latest/}" )

                _deploy_tags=( "${_deploytag}" )
                ;;

            ### -------------------------
            ### debian-vnc-xfce-python-g3
            ### -------------------------

            python | python-* )

                _deploy_repo="${_owner}/${DEPLOYMENT_REPO_PYTHON}"
                _readme_context="docker/xfce-python"

                FEATURES_PYTHON="1"

                ### this feature is enabled by default
                ### however, it can be disabled via environment variables (export FEATURES_NOVNC=0)
                if [[ "${FEATURES_NOVNC}" == "0" ]] ; then
                    FEATURES_NOVNC=""
                else
                    FEATURES_NOVNC="1"
                fi

                if [[ "${_blend}" =~ chromium ]] ; then

                    FEATURES_CHROMIUM="1"
                else
                    FEATURES_CHROMIUM=""
                fi

                if [[ "${_blend}" =~ firefox ]] ; then

                    FEATURES_FIREFOX=1

                    ### this feature is enabled by default
                    ### however, it can be disabled via environment variables (export FEATURES_FIREFOX_PLUS=0)
                    if [[ "${FEATURES_FIREFOX_PLUS}" == "0" ]] ; then
                        FEATURES_FIREFOX_PLUS=""
                    else
                        FEATURES_FIREFOX_PLUS="1"
                    fi
                fi

                if [[ "${_blend}" =~ vscode ]] ; then

                    FEATURES_VSCODE="1"
                    VSCODE_VERSION=$( "${_mydir}/${_script_release_of}" 'vscode' )
                    VSCODE_FILE=$( "${_mydir}/${_script_release_of}" 'vscode-file' "${VSCODE_VERSION}" )
                else
                     FEATURES_VSCODE=""
                fi

                 DOCKER_TAG="${_blend}"
                _deploytag="latest${FEATURES_VSCODE:+-vscode}${FEATURES_CHROMIUM:+-chromium}${FEATURES_FIREFOX:+-firefox}"

                ### replace 'latest' by 'python'
                _deploy_builder_tags=( "${_deploytag/latest/python}" )

                ### remove 'latest-' and '-latest'
                _deploytag=( "${_deploytag/latest-/}" )
                _deploytag=( "${_deploytag/-latest/}" )

                _deploy_tags=( "${_deploytag}" )
                ;;

            * )
                die "Unsupported blend '${_blend}'"
                ;;
        esac

        ### add optional suffixes to deployment tags

        if [[ "${FEATURES_FIREFOX}" == "1" && -z "${FEATURES_FIREFOX_PLUS}" ]] ; then

            DOCKER_TAG="${DOCKER_TAG}-default"
            for i in "${!_deploy_tags[@]}" ; do
                _deploy_tags[$i]="${_deploy_tags[$i]}-default"
            done
        fi

        if [[ -z "${FEATURES_NOVNC}" ]] ; then

            DOCKER_TAG="${DOCKER_TAG}-vnc"
            for i in "${!_deploy_tags[@]}" ; do
                _deploy_tags[$i]="${_deploy_tags[$i]}-vnc"
            done
        fi
        ;;
    
    * )
        die "Unsupported branch '${_branch}'"
        ;;
esac
